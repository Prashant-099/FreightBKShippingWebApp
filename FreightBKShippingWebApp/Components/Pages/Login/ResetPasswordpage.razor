@page "/reset-password"
@using System.ComponentModel.DataAnnotations
@using FreightBKShippingWebApp.Model
@using FreightBKShippingWebApp.Services

@inject NavigationManager Navigation
@inject AuthService AuthService
@inject ToasteService ToastService
@layout EmptyLayout
@rendermode InteractiveServer

<AuthCardLayout TModel="ResetPasswordDto"
                HeaderTitle="Reset Your Password"
                HeaderSubtitle="Enter your new password 🔑"
                HeaderIcon="fa-key"
                HeaderTextColor="text-warning"
                HeaderIconClass="bg-warning bg-gradient"
                BackgroundGradient="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">

    <ChildContent>
        <EditForm Model="@resetModel" OnValidSubmit="HandleResetPassword">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="mb-3">
                <label>New Password</label>
                <DxTextBox @bind-Text="resetModel.NewPassword"
                           Password="true"
                           CssClass="w-100"
                           NullText="Enter new password" />
            </div>

            @* <div class="mb-3">
                <label>Confirm Password</label>
                <DxTextBox @bind-Text="resetModel.ConfirmPassword"
                           Password="true"
                           CssClass="w-100"
                           NullText="Confirm new password" />
            </div> *@

            <button type="submit" class="btn btn-warning w-100" disabled="@isLoading">
                @if (isLoading)
                {
                    <span><span class="spinner-border spinner-border-sm me-2"></span> Resetting...</span>
                }
                else
                {
                    <span>Reset Password</span>
                }
            </button>
        </EditForm>
    </ChildContent>

    <FooterContent>
        <p>Back to <a href="/login">Login</a></p>
    </FooterContent>
</AuthCardLayout>

@code {
    private ResetPasswordDto resetModel = new();
    private bool isLoading = false;

    protected override void OnInitialized()
    {
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);

        resetModel.Email = query["email"];
        resetModel.Token = query["token"];
    }

    private async Task HandleResetPassword()
    {
      

        try
        {
            isLoading = true;
            var response = await AuthService.ResetPasswordAsync(resetModel);

            if (response.IsSuccess)
            {
                ToastService.Success("✅ Password reset successfully!");
                Navigation.NavigateTo("/login");
            }
            else
            {
                ToastService.Error(response.ErrorMessage ?? "❌ Failed to reset password.");
            }
        }
        catch (Exception ex)
        {
            ToastService.Error($"⚠️ Error: {ex.Message}");
        }
        finally
        {
            isLoading = false;
        }
    }
}
