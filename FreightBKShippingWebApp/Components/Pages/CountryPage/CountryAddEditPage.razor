@using FreightBKShippingWebApp.Model
@using FreightBKShippingWebApp.Services
@inject CountryService CountryService
@inject ToasteService ToastService
@inject LoadingService LoadingService
@inject CurrencyService CurrencyService
<DxPopup @bind-Visible="Visible" ShowCloseButton="true" HeaderText="@Title" Width="600px">
    <EditForm Model="@EditModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <DxFormLayout>
            <DxFormLayoutItem Caption="Name">
                <ChildContent Context="itemContext">
                    <DxTextBox @bind-Text="EditModel.CountryName" />
                </ChildContent>
            </DxFormLayoutItem>
           @*  <DxFormLayoutItem Caption="Code">
                <ChildContent Context="itemContext">
                    <DxTextBox @bind-Text="EditModel.CountryCode" />
                </ChildContent>
            </DxFormLayoutItem> *@
            <DxFormLayoutItem Caption="Currency">
                <ChildContent Context="itemContext">
                    <DxComboBox TData="Currency" TValue="String"
                                Data="@CurrencyList"
                                TextFieldName="CurrencyName"
                                ValueFieldName="CurrencyName"
                                ClearButtonVisible="true"
                                AllowUserInput="false"
                                NullText="-- Select Currency --"
                                @bind-Value="EditModel.CountryCurrency"
                                SearchMode="ListSearchMode.AutoSearch"
                                SearchFilterCondition="ListSearchFilterCondition.StartsWith" />
                </ChildContent>
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Remarks">
                <ChildContent Context="itemContext">
                    <DxMemo @bind-Text="EditModel.CountryRemarks" Rows="2" />
                </ChildContent>
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="Active">
                <ChildContent Context="itemContext">
                    <DxCheckBox @bind-Checked="EditModel.CountryStatus" />
                </ChildContent>
            </DxFormLayoutItem>
        </DxFormLayout>

        <div class="mt-3 text-end">
            <DxButton Text="Save" RenderStyle="ButtonRenderStyle.Primary" SubmitFormOnClick="true" />
            <DxButton Text="Cancel" RenderStyle="ButtonRenderStyle.Secondary" Click="Hide" />
        </div>
    </EditForm>
</DxPopup>

@code {
    [Parameter] public EventCallback OnSaved { get; set; }

    private bool Visible { get; set; }
    private string Title { get; set; } = "Add/Edit Country";
    private Country EditModel { get; set; } = new();
    private List<Currency> CurrencyList = new();
    public void Show(Country country)
    {
        EditModel = country != null ? new Country
        {
            CountryId = country.CountryId,
            CountryName = country.CountryName,
            CountryCode = country.CountryCode,
            CountryCurrency = country.CountryCurrency,
            CountryRemarks = country.CountryRemarks,
            CountryStatus = country.CountryStatus
        } : new Country();

        Title = country?.CountryId > 0 ? "Edit Country" : "Add Country";
        Visible = true;
    }

    private void Hide()
    {
        Visible = false;
    }
    protected override async Task OnInitializedAsync()
    {
        CurrencyList = await CurrencyService.GetAllAsync();
    }
    private async Task HandleValidSubmit()
    {
        LoadingService.Show();
        try
        {
            if (EditModel.CountryId == 0)
            {
                await CountryService.CreateAsync(EditModel);
                ToastService.Success("Country created successfully!");
            }
            else
            {
                await CountryService.UpdateAsync(EditModel);
                ToastService.Success("Country updated successfully!");
            }

            Visible = false;
            await OnSaved.InvokeAsync();
        }
        catch (Exception ex)
        {
            ToastService.Error($"Error saving country: {ex.Message}");
        }
        finally
        {
            LoadingService.Hide();
        }
    }
}
